<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:internals="clr-namespace:OC.Assistant.Theme.Internals">
    
    <Thickness x:Key="MenuFlyoutPresenterThemePadding">0,0</Thickness>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}" TargetType="ScrollViewer">
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="PanningMode" Value="VerticalOnly" />
    </Style>

    <Style x:Key="DefaultMenuItemSeparatorStyle" TargetType="Separator">
        <Setter Property="Background" Value="{DynamicResource White3Brush}" />
        <Setter Property="Padding" Value="12,4,12,4" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle
                        Fill="{TemplateBinding Background}"
                        Margin="{TemplateBinding Padding}"
                        Height="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="Separator" BasedOn="{StaticResource DefaultMenuItemSeparatorStyle}" />

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}" TargetType="MenuItem">
        <Grid
            x:Name="ContentRoot"
            Background="{TemplateBinding Background}"
            SnapsToDevicePixels="True">
            <Border
                x:Name="Background"
                Background="{TemplateBinding Background}"
                BorderThickness="1"/>
            <ContentPresenter
                ContentSource="Header"
                RecognizesAccessKey="True"
                VerticalAlignment="Center"
                Margin="12,0,12,0"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPointerOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPressed}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}" TargetType="MenuItem">
        <Grid
            Height="32"
            x:Name="ContentRoot"
            SnapsToDevicePixels="True">
            <Border 
                x:Name="Background"
                BorderThickness="1"/>
            <StackPanel Orientation="Horizontal">
                <Image
                    x:Name="HeaderIcon"
                    Height="20"
                    Width="20"
                    Margin="12 0 0 0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    Source="{TemplateBinding Icon}">
                </Image>
                <Grid
                    VerticalAlignment="Stretch"
                    Width="12"
                    Background="Transparent">
                </Grid>
                <ContentPresenter
                    x:Name="HeaderText"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    Margin="0 0 12 0"
                    VerticalAlignment="Center"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </StackPanel>

            <Popup
                x:Name="PART_Popup"
                AllowsTransparency="true"
                Focusable="false"
                IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                Placement="Bottom">
                <Decorator>
                    <Border
                        x:Name="SubMenuRoot"
                        Background="{DynamicResource MenuFlyoutPresenterBackground}"
                        CornerRadius="{DynamicResource ControlCornerRadius}">
                        <Grid>
                            <ScrollViewer
                                x:Name="SubMenuScrollViewer"
                                Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                              TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                Margin="{DynamicResource MenuFlyoutPresenterThemePadding}"
                                MinWidth="96">
                                <ItemsPresenter
                                    RenderOptions.ClearTypeHint="Enabled"
                                    Margin="0,2,0,2"
                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    Grid.IsSharedSizeScope="true"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                            <Border
                                x:Name="SubMenuBorder"
                                BorderThickness="1"
                                CornerRadius="{DynamicResource ControlCornerRadius}" />
                        </Grid>
                    </Border>
                </Decorator>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="HeaderIcon" Value="Collapsed" />
            </Trigger>
            <Trigger Property="Header" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="HeaderText" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource White5Brush}" />
            </Trigger>
            <!-- Selected -->
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundSelected}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Background" Property="Background" Value="{DynamicResource MenuBarItemBackgroundPressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="HeaderText" Property="TextBlock.Foreground" Value="{DynamicResource TextControlForegroundDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}" TargetType="MenuItem">
        <Border
            x:Name="LayoutRoot"
            SnapsToDevicePixels="true"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderThickness="1"
            CornerRadius="{DynamicResource ControlCornerRadius}"
            Margin="2 0 2 0">
            <Grid x:Name="AnimationRoot">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label
                    Grid.Column="0"
                    x:Name="CheckGlyph"
                    Foreground="{DynamicResource ToggleMenuFlyoutItemCheckGlyphForeground}"
                    Opacity="0"
                    Width="16"
                    Margin="0,0,12,0"
                    Visibility="Collapsed"
                    FontFamily="{DynamicResource SymbolThemeFontFamily}"
                    FontSize="16"
                    VerticalAlignment="Center">
                    &#xE73E;
                </Label>
                <Viewbox
                    x:Name="IconRoot"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Width="16"
                    Height="16"
                    Margin="0,0,12,0">
                    <ContentPresenter
                        x:Name="IconContent"
                        ContentSource="Icon"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Viewbox>
                <ContentPresenter
                    x:Name="ContentPresenter"
                    Grid.Column="2"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    TextElement.Foreground="{TemplateBinding Foreground}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="Center"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock
                    x:Name="KeyboardAcceleratorTextBlock"
                    Grid.Column="3"
                    Text="{TemplateBinding InputGestureText}"
                    Margin="24,0,0,0"
                    Foreground="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForeground}"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="IconRoot" Value="Collapsed" />
            </Trigger>
            <Trigger Property="InputGestureText" Value="">
                <Setter Property="Visibility" TargetName="KeyboardAcceleratorTextBlock" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckGlyph" Property="Opacity" Value="1" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="True">
                <Setter TargetName="CheckGlyph" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource MenuFlyoutItemRevealBackgroundPointerOver}" />
                <Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPointerOver}" />
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPointerOver}" />
                <Setter TargetName="CheckGlyph" Property="Foreground" Value="{DynamicResource ToggleMenuFlyoutItemCheckGlyphForegroundPointerOver}" />
                <Setter TargetName="KeyboardAcceleratorTextBlock" Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPointerOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource MenuFlyoutItemRevealBackgroundPressed}" />
                <Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPressed}" />
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutItemForegroundPressed}" />
                <Setter TargetName="CheckGlyph" Property="Foreground" Value="{DynamicResource ToggleMenuFlyoutItemCheckGlyphForegroundPressed}" />
                <Setter TargetName="KeyboardAcceleratorTextBlock" Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundPressed}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource MenuFlyoutItemBackgroundDisabled}" />
                <Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutItemForegroundDisabled}" />
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutItemForegroundDisabled}" />
                <Setter TargetName="CheckGlyph" Property="Foreground" Value="{DynamicResource ToggleMenuFlyoutItemCheckGlyphForegroundDisabled}" />
                <Setter TargetName="KeyboardAcceleratorTextBlock" Property="Foreground" Value="{DynamicResource MenuFlyoutItemKeyboardAcceleratorTextForegroundDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}" TargetType="MenuItem">
        <Border
            x:Name="LayoutRoot"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderThickness="1"
            SnapsToDevicePixels="True"
            CornerRadius="{DynamicResource ControlCornerRadius}"
            Margin="2 0 2 0">
            <Grid x:Name="AnimationRoot">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="MenuItemCheckColumnGroup" Width="Auto" />
                    <ColumnDefinition SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Viewbox
                    x:Name="IconRoot"
                    Grid.Column="1"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Width="16"
                    Height="16"
                    Margin="0,0,12,0">
                    <ContentPresenter
                        x:Name="IconContent"
                        ContentSource="Icon"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Viewbox>
                <ContentPresenter
                    x:Name="ContentPresenter"
                    Grid.Column="2"
                    ContentSource="Header"
                    RecognizesAccessKey="True"
                    TextElement.Foreground="{TemplateBinding Foreground}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="Center"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Label
                    x:Name="SubItemChevron"
                    Grid.Column="3"
                    FontFamily="{DynamicResource SymbolThemeFontFamily}"
                    FontSize="12"
                    VerticalAlignment="Center"
                    Foreground="{DynamicResource MenuFlyoutSubItemChevron}"
                    Margin="24,0,0,0">
                    &#xE76C;
                </Label>
                <Popup
                    Grid.Column="0" x:Name="PART_Popup"
                    AllowsTransparency="true"
                    Focusable="false"
                    IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                    Placement="Right"
                    PlacementTarget="{Binding ElementName=LayoutRoot}">
                    <Popup.PlacementRectangle>
                        <MultiBinding>
                            <MultiBinding.Converter>
                                <internals:RectanglePlacement Margin="0,-2" />
                            </MultiBinding.Converter>
                            <Binding ElementName="LayoutRoot" Path="ActualWidth" />
                            <Binding ElementName="LayoutRoot" Path="ActualHeight" />
                        </MultiBinding>
                    </Popup.PlacementRectangle>
                    <Decorator>
                        <Border
                            x:Name="SubMenuRoot"
                            Background="{DynamicResource MenuFlyoutPresenterBackground}"
                            CornerRadius="{DynamicResource ControlCornerRadius}">
                            <Grid>
                                <ScrollViewer
                                    x:Name="SubMenuScrollViewer"
                                    Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                  TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                    Margin="{DynamicResource MenuFlyoutPresenterThemePadding}"
                                    MinWidth="96">
                                    <ItemsPresenter
                                        RenderOptions.ClearTypeHint="Enabled"
                                        Margin="0,2,0,2"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        Grid.IsSharedSizeScope="true"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </ScrollViewer>
                                <Border
                                    x:Name="SubMenuBorder"
                                    BorderThickness="1"
                                    CornerRadius="{DynamicResource ControlCornerRadius}" />
                            </Grid>
                        </Border>
                    </Decorator>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="IconRoot" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource MenuFlyoutSubItemRevealBackgroundPointerOver}" />
                <Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutSubItemForegroundPointerOver}" />
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutSubItemForegroundPointerOver}" />
                <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource MenuFlyoutSubItemChevronPointerOver}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource MenuFlyoutSubItemRevealBackgroundPressed}" />
                <Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutSubItemForegroundPressed}" />
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutSubItemForegroundPressed}" />
                <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource MenuFlyoutSubItemChevronPressed}" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource MenuFlyoutSubItemRevealBackgroundSubMenuOpened}" />
                <Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutSubItemForegroundSubMenuOpened}" />
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutSubItemForegroundSubMenuOpened}" />
                <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource MenuFlyoutSubItemChevronSubMenuOpened}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="LayoutRoot" Property="Background" Value="{DynamicResource MenuFlyoutSubItemRevealBackgroundDisabled}" />
                <Setter TargetName="IconContent" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutSubItemForegroundDisabled}" />
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource MenuFlyoutSubItemForegroundDisabled}" />
                <Setter TargetName="SubItemChevron" Property="Foreground" Value="{DynamicResource MenuFlyoutSubItemChevronDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DefaultMenuItemStyle" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="{DynamicResource MenuFlyoutItemRevealBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource MenuFlyoutItemForeground}" />
        <Setter Property="Padding" Value="11,5,11,5" />
        <Setter Property="FontSize" Value="{DynamicResource ThemeFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Background" Value="{DynamicResource MenuBarItemBackground}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Background" Value="{DynamicResource MenuBarItemBackground}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Background" Value="{DynamicResource MenuFlyoutSubItemRevealBackground}" />
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="MenuItem" BasedOn="{StaticResource DefaultMenuItemStyle}" />
    
    
    <Style x:Key="LinkMenu" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource LinkBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource ThemeFontSize}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource MenuBarItemBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Grid Margin="4 0 4 0"
                          x:Name="ContentRoot"
                          SnapsToDevicePixels="True">
                        <Border 
                            x:Name="Background"
                            BorderThickness="0"/>
                        <TextBlock x:Name="HeaderText">
                            <ContentPresenter
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                VerticalAlignment="Center"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </TextBlock>
                        <Popup
                            x:Name="PART_Popup"
                            AllowsTransparency="true"
                            Focusable="false"
                            IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                            PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                            Placement="Bottom">
                            <Decorator>
                                <Border
                                    Margin="0 10 0 0"
                                    x:Name="SubMenuRoot"
                                    Background="{DynamicResource MenuFlyoutPresenterBackground}"
                                    CornerRadius="{DynamicResource ControlCornerRadius}">
                                    <Grid>
                                        <ScrollViewer
                                            x:Name="SubMenuScrollViewer"
                                            Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
                                                                                          TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                            Margin="{DynamicResource MenuFlyoutPresenterThemePadding}"
                                            MinWidth="96">
                                            <ItemsPresenter
                                                RenderOptions.ClearTypeHint="Enabled"
                                                Margin="0,2,0,2"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                Grid.IsSharedSizeScope="true"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </ScrollViewer>
                                        <Border
                                            x:Name="SubMenuBorder"
                                            BorderThickness="0"
                                            CornerRadius="{DynamicResource ControlCornerRadius}" />
                                    </Grid>
                                </Border>
                            </Decorator>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="HeaderText" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsSubmenuOpen" Value="True">
                            <Setter TargetName="HeaderText" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="HeaderText" Property="TextDecorations" Value="Underline" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>  
    
</ResourceDictionary>